[tool.poetry]
name = "weather-command"
version = "6.1.1"
description = "Command line weather app"
authors = ["Paul Sanders <psanders1@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/sanders41/weather-command"
homepage = "https://github.com/sanders41/weather-command"
documentation = "https://github.com/sanders41/weather-command"
keywords = ["weather", "cli"]

[tool.poetry.dependencies]
python = "^3.7"
rich = "13.4.1"
httpx = "0.24.1"
pydantic = "1.10.8"
camel-converter = {version = "3.0.0", extras = ["pydantic"]}
typer = "0.9.0"
tenacity = "8.2.2"
pyyaml = "6.0"

[tool.poetry.group.dev.dependencies]
black = "23.3.0"
mypy = "1.3.0"
pre-commit = "2.21.0"
pytest = "7.3.1"
pytest-cov = "4.1.0"
ruff = "0.0.270"
tomli = {version = "2.0.1", python = "<3.11"}
types-pyyaml = "6.0.12.10"
pytest-asyncio = "0.21.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
weather = "weather_command.main:app"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.egg
  | \.git
  | \.hg
  | \.mypy_cache
  | \.nox
  | \.tox
  | \.venv
  | \venv
  | _build
  | buck-out
  | build
  | dist
  | setup.py
)/
'''

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["tomli.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=weather_command --cov-report term-missing"
asyncio_mode = "auto"

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:", "pragma: no cover"]

[tool.ruff]
select = ["E", "F", "UP", "I001", "T201", "T203"]
ignore = ["E501"]
line-length = 100
target-version = "py37"
fix = true
